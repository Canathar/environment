#    _               _         _            _           _
#   | |__   __ _ ___| |__     (_)_ __   ___| |_   _  __| | ___
#   | '_ \ / _` / __| '_ \    | | '_ \ / __| | | | |/ _` |/ _ \
#  _| |_) | (_| \__ \ | | |   | | | | | (__| | |_| | (_| |  __/
# (_)_.__/ \__,_|___/_| |_|___|_|_| |_|\___|_|\__,_|\__,_|\___|
#                        |_____|
#

# =================================================================================================================================
# ==                                                          General                                                            ==
# =================================================================================================================================

# Configure the default editor
export EDITOR=vi

# Configure the shell windows not to timeout
export TMOUT=0



# =================================================================================================================================
# ==                                                      Terminal Colors                                                        ==
# =================================================================================================================================

# Set the terminal to display 256 colors
export TERM=xterm-256color

# Define the ANSI graphics colors to use with the console
# ref: ECMA-48 Control Functions For Coded Character Sets
# see: https://en.wikipedia.org/wiki/ANSI_escape_code
# see: https://en.wikipedia.org/wiki/ANSI_escape_code#Control_Sequence_Introducer_commands
# see: https://en.wikipedia.org/wiki/ANSI_escape_code#Select_Graphic_Rendition_parameters
# See: man console_codes for further reference
# NOTE: Due to the way in which the CSI is translated, these sequences CAN NOT be shared with the string capabilities
#       (SGR sequences are wrapped in an additional set of parentheses for use with prompts)

   lightred="\[\033[1;31m\]"
 lightgreen="\[\033[1;32m\]"
lightyellow="\[\033[1;33m\]"
  lightblue="\[\033[1;34m\]"
    magenta="\[\033[1;35m\]"
       cyan="\[\033[1;36m\]"
      white="\[\033[1;37m\]"

    darkred="\[\033[0;31m\]"
  darkgreen="\[\033[0;32m\]"
     violet="\[\033[0;35m\]"
 aquamarine="\[\033[0;36m\]"
  darkwhite="\[\033[0;37m\]"

    nocolor="\[\033[0m\]"


# Terminal Prompt
# See: man bash (search for PROMPTING) for parameter reference
export PS1="${lightgreen}[${cyan}\u${white}@${magenta}\h${lightblue}:\W${lightgreen}]${nocolor}$ "



# =================================================================================================================================
# ==                                                          History                                                            ==
# =================================================================================================================================

# Undocumented feature which set the size to "unlimited"
# see: https://stackoverflow.com/questions/9457233/unlimited-bash-history
export HISTFILESIZE=
export HISTSIZE=
#export HISTTIMEFORMAT="[%F %T]"

# Change the file location because certain bash sessions truncate .bash_history file upon close
# see: https://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
export HISTFILE=${HOME}/.bash_eternal_history

# Force prompt to write history after every command
# see: https://superuser.com/questions/20900/bash-history-loss
PROMPT_COMMAND="history -a; ${PROMPT_COMMAND}"

# Save multi-line commands as a single history entry
shopt -s cmdhist

# History is APPENDED with shell exits (rather than overwriting)
shopt -s histappend



# =================================================================================================================================
# --                                                      man Page Colors                                                        --
# =================================================================================================================================

# Define the ANSI graphics colors to use with the man pages
# ref: ECMA-48 Control Functions For Coded Character Sets
# see: https://en.wikipedia.org/wiki/ANSI_escape_code
# see: https://en.wikipedia.org/wiki/ANSI_escape_code#Control_Sequence_Introducer_commands
# see: https://en.wikipedia.org/wiki/ANSI_escape_code#Select_Graphic_Rendition_parameters
# see: man termcap 5 for further reference
# NOTE: Due to the way in which the CSI is translated, these sequences CAN NOT be shared with the prompt


# String Capability Control Code: Begin Blink Mode
# SGR Sequence: CSI + Bold + Set Foreground Color + 256-color-mode-color (#5FAFD7)
export LESS_TERMCAP_mb=$'\E[1;38;5;74m'

# String Capability Control Code: Begin Blink Mode
# NOTE: Lots of text in man pages is tagged as 'blink', but should NOT blink. The SGR sequence below intentionally DOES NOT BLINK
# SGR Sequence: CSI + Bold + Set Foreground Color + 256-color-mode-color (#FF5FFF)
export LESS_TERMCAP_md=$'\E[1;38;5;207m'

# String Capability Control Code: Reverse All Modes (i.e. blink/bold)
# SGR Sequence: CSI + Reset
export LESS_TERMCAP_me=$'\E[0m'


# String Capability Control Code: Begin Standout Mode - Info BNox
# SGR Sequence: CSI + Set Foreground Color + 256-color-mode-color (#949494)
export LESS_TERMCAP_so=$'\E[38;5;246m'

# String Capability Control Code: Reverse Standout Mode
# SGR Sequence: CSI + Reset
export LESS_TERMCAP_se=$'\E[0m'


# String Capability Control Code: Begin Underline
# SGR Sequence: CSI + Underline + Set Foreground Color + 256-color-mode-color (#87FF00)
export LESS_TERMCAP_us=$'\E[4;38;5;118m'

# String Capability Control Code: Reverse Underline
# SGR Sequence: CSI + Reset
export LESS_TERMCAP_ue=$'\E[0m'


# Used for gnome-terminal, mate-terminal
export GROFF_NO_SGR=1

